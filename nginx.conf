# nginx.conf
server {
    listen 80;
    server_name instll.sh;            # or your domain

        # /username/reponame -> install.sh on GitHub
    location ~ ^/(?<user>[^/]+)/(?<repo>[^/]+)$ {
        # Mirror request to analytics endpoint
        mirror /analytics;
        mirror_request_body off;

        return 302 https://raw.githubusercontent.com/$user/$repo/refs/heads/main/install.sh;
    }

    # /username/reponame/script -> script.sh on GitHub
    location ~ ^/(?<user>[^/]+)/(?<repo>[^/]+)/(?<script>[^/]+)$ {
        # Mirror request to analytics endpoint
        mirror /analytics;
        mirror_request_body off;

        return 302 https://raw.githubusercontent.com/$user/$repo/refs/heads/main/$script.sh;
    }

        # Analytics endpoint - sends data to GoatCounter
    location = /analytics {
        internal;
        access_log /var/log/nginx/analytics.log combined;

        # Send to GoatCounter
        proxy_pass https://inem.goatcounter.com/count?p=$request_uri&t=instll.sh;
        proxy_set_header User-Agent "instll.sh-analytics/1.0";
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;

        # Don't wait for response, fire and forget
        proxy_connect_timeout 1s;
        proxy_send_timeout 1s;
        proxy_read_timeout 1s;

        # Ignore errors from analytics
        proxy_intercept_errors on;
        error_page 404 500 502 503 504 = @analytics_fallback;
    }

    # Fallback if analytics fails
    location @analytics_fallback {
        return 200 'analytics_failed';
    }

    # everything else â€” redirect to main repo
    location / {
        return 302 https://github.com/rbbr-io/instll.sh;
    }


}
